!function(Q){var n={};function t(c){if(n[c])return n[c].exports;var s=n[c]={i:c,l:!1,exports:{}};return Q[c].call(s.exports,s,s.exports,t),s.l=!0,s.exports}t.m=Q,t.c=n,t.d=function(Q,n,c){t.o(Q,n)||Object.defineProperty(Q,n,{enumerable:!0,get:c})},t.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},t.t=function(Q,n){if(1&n&&(Q=t(Q)),8&n)return Q;if(4&n&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var c=Object.create(null);if(t.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:Q}),2&n&&"string"!=typeof Q)for(var s in Q)t.d(c,s,function(n){return Q[n]}.bind(null,s));return c},t.n=function(Q){var n=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return t.d(n,"a",n),n},t.o=function(Q,n){return Object.prototype.hasOwnProperty.call(Q,n)},t.p="",t(t.s=1)}([function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcGFnZXMvaW5kZXguY3NzPzRiZmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/pages/index.css\nvar pages = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./src/js/constants/constants.js\nvar root = document.querySelector('.root');\nvar page = root.querySelector('.page');\nvar navigation = page.querySelector('.header__navigation');\nvar menuIconWrapper = document.querySelector('.menu-icon-wrapper');\nvar menuIcon = document.querySelector('.menu-icon');\nvar ymap = document.querySelector('#map');\nvar selection = document.querySelector('.selection');\nvar selectionLink = document.querySelectorAll('.selection__link');\nvar tempId = document.getElementById('temp');\nvar spoilersWrappers = document.querySelectorAll('.spoiler__wrapper');\nvar scrollUpButton = document.querySelector('.scroll-up');\nvar footer = document.querySelector('.footer__text');\nvar footerText = 'Quarta. Все права защищены';\n\n// CONCATENATED MODULE: ./src/js/components/Header.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Header = /*#__PURE__*/function () {\n  function Header(menuIconWrapper, menuIcon, navigation, page, root) {\n    _classCallCheck(this, Header);\n\n    this.menuIconWrapper = menuIconWrapper;\n    this.menuIcon = menuIcon;\n    this.navigation = navigation;\n    this.page = page;\n    this.root = root;\n  }\n\n  _createClass(Header, [{\n    key: \"_menuOpened\",\n    value: function _menuOpened() {\n      var menuState = this.menuIconWrapper.querySelector('.menu-icon__active');\n\n      if (menuState === this.menuIcon) {\n        return true;\n      } else return false;\n    }\n  }, {\n    key: \"_openMenu\",\n    value: function _openMenu() {\n      this.menuIcon.classList.add('menu-icon__active');\n      this.navigation.classList.add('header__navigation_opened');\n      this.page.classList.add('background_black');\n      this.root.classList.add('overflow-hidden');\n      this.menuIconWrapper.ariaLabel = 'Закрыть меню';\n    }\n  }, {\n    key: \"_closeMenu\",\n    value: function _closeMenu() {\n      this.menuIcon.classList.remove('menu-icon__active');\n      this.navigation.classList.remove('header__navigation_opened');\n      this.page.classList.remove('background_black');\n      this.root.classList.remove('overflow-hidden');\n      this.menuIconWrapper.ariaLabel = 'Открыть меню';\n    }\n  }, {\n    key: \"setEventListener\",\n    value: function setEventListener() {\n      var _this = this;\n\n      this.menuIconWrapper.addEventListener('click', function () {\n        if (!_this._menuOpened()) {\n          _this._openMenu();\n        } else _this._closeMenu();\n      });\n      this.page.addEventListener('click', function (event) {\n        if (event.target === _this.page && _this._menuOpened()) {\n          _this._closeMenu();\n        }\n      });\n      this.page.addEventListener('keydown', function (event) {\n        if (event.keyCode === 27 && _this._menuOpened()) {\n          _this._closeMenu();\n        }\n      });\n    }\n  }]);\n\n  return Header;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Map.js\nfunction Map_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Map_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Map_createClass(Constructor, protoProps, staticProps) { if (protoProps) Map_defineProperties(Constructor.prototype, protoProps); if (staticProps) Map_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Map = /*#__PURE__*/function () {\n  function Map(ymap, classPrompt) {\n    Map_classCallCheck(this, Map);\n\n    this.ymap = ymap;\n    this.classPrompt = classPrompt;\n  }\n\n  Map_createClass(Map, [{\n    key: \"setEventListener\",\n    value: function setEventListener() {\n      var _this = this;\n\n      this.ymap.addEventListener('touchmove', function (event) {\n        if (_this.ymap.contains(event.target) && event.targetTouches.length < 2) {\n          _this.ymap.classList.add(_this.classPrompt);\n        }\n      }, {\n        passive: true\n      });\n      this.ymap.addEventListener('touchend', function (event) {\n        if (_this.ymap.contains(event.target)) {\n          _this.ymap.classList.remove(_this.classPrompt);\n        }\n      });\n    }\n  }]);\n\n  return Map;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Selections.js\nfunction Selections_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Selections_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Selections_createClass(Constructor, protoProps, staticProps) { if (protoProps) Selections_defineProperties(Constructor.prototype, protoProps); if (staticProps) Selections_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Selections = /*#__PURE__*/function () {\n  function Selections(container, tempId, block, blockAction) {\n    Selections_classCallCheck(this, Selections);\n\n    this.container = container;\n    this.tempId = tempId;\n    this.block = block;\n    this.blockAction = blockAction;\n    this.selectionList = this.container.querySelector('.selection__list');\n    this.anchors = this.selectionList.querySelectorAll('a[href*=\"#\"]');\n  } // получение Id из URL\n\n\n  Selections_createClass(Selections, [{\n    key: \"getUrlId\",\n    value: function getUrlId() {\n      return window.location.hash.split('#')[1];\n    } // получение Id из ссылки\n\n  }, {\n    key: \"_getLinkHref\",\n    value: function _getLinkHref(element) {\n      return element.getAttribute('href').substr(1);\n    } // переключение блоков\n\n  }, {\n    key: \"_switchBlocks\",\n    value: function _switchBlocks(element) {\n      if (element) {\n        var currentBlock = this.container.querySelector('.selection__content_visible');\n        currentBlock.classList.remove('selection__content_visible');\n        return element.classList.add('selection__content_visible');\n      } else {\n        return;\n      }\n    } // переключение кнопок\n\n  }, {\n    key: \"_switchButton\",\n    value: function _switchButton(element) {\n      var currentButton = this.container.querySelector('.selection__link_active');\n      currentButton.classList.remove('selection__link_active');\n      element.classList.add('selection__link_active');\n    } // переключение блоков при переходе\n\n  }, {\n    key: \"openSelectedBlocks\",\n    value: function openSelectedBlocks(event) {\n      // по якорной ссылке\n      if (this.getUrlId() != null && event === undefined) {\n        this.tempId.id = this.getUrlId();\n        var dataId = this.tempId.id + 'Data';\n\n        this._switchBlocks(this.container.querySelector(\"#\".concat(dataId)));\n\n        for (var i = 0; i < this.anchors.length; i++) {\n          if (this._getLinkHref(this.anchors[i]) === this.getUrlId()) {\n            this._switchButton(this.anchors[i]);\n          }\n        }\n      } //внутри блока\n      else if (event != undefined) {\n          this.tempId.id = this._getLinkHref(event);\n\n          this._switchBlocks(document.getElementById(this._getLinkHref(event) + 'Data'));\n\n          this._switchButton(event);\n        } else return;\n    } //перезапись temp Id для блока по умолчанию\n\n  }, {\n    key: \"rewritingDefaultArchorId\",\n    value: function rewritingDefaultArchorId() {\n      var currentBlock = this.container.querySelector('.selection__link_active');\n      this.tempId.id = this._getLinkHref(currentBlock);\n      return this.tempId.id;\n    }\n  }, {\n    key: \"setEventListener\",\n    value: function setEventListener() {\n      var _this = this;\n\n      var _loop = function _loop(i) {\n        _this.anchors[i].addEventListener('click', function (event) {\n          event.preventDefault();\n\n          var blockID = _this._getLinkHref(_this.anchors[i]);\n\n          window.location.hash = blockID;\n\n          _this.openSelectedBlocks(event.target); // если это блок новостей - запустить рендер из БД\n\n\n          if (_this.block === 'news') {\n            _this.blockAction.render();\n          }\n        });\n      };\n\n      for (var i = 0; i < this.anchors.length; i++) {\n        _loop(i);\n      }\n    }\n  }]);\n\n  return Selections;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Spoiler.js\nfunction Spoiler_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Spoiler_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Spoiler_createClass(Constructor, protoProps, staticProps) { if (protoProps) Spoiler_defineProperties(Constructor.prototype, protoProps); if (staticProps) Spoiler_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Spoiler = /*#__PURE__*/function () {\n  function Spoiler(spoilerWrappers) {\n    Spoiler_classCallCheck(this, Spoiler);\n\n    this.spoilerWrappers = spoilerWrappers;\n  }\n\n  Spoiler_createClass(Spoiler, [{\n    key: \"_spoilerOpened\",\n    value: function _spoilerOpened(e) {\n      if (e.classList.contains('spoiler__content_visible')) {\n        return true;\n      } else return false;\n    }\n  }, {\n    key: \"_openSpoiler\",\n    value: function _openSpoiler(e, openingСlass) {\n      e.classList.add(openingСlass);\n    }\n  }, {\n    key: \"_closeSpoiler\",\n    value: function _closeSpoiler(e, coverСlass) {\n      e.classList.remove(coverСlass);\n    }\n  }, {\n    key: \"setEventListener\",\n    value: function setEventListener() {\n      var _this = this;\n\n      var _loop = function _loop(i) {\n        _this.spoilerWrappers[i].addEventListener('click', function (event) {\n          var button = _this.spoilerWrappers[i].querySelector('.spoiler__button');\n\n          var content = _this.spoilerWrappers[i].parentNode.querySelector('.spoiler__content');\n\n          if (_this._spoilerOpened(content)) {\n            _this._closeSpoiler(button, 'spoiler__button_active');\n\n            _this._closeSpoiler(content, 'spoiler__content_visible');\n          } else {\n            _this._openSpoiler(button, 'spoiler__button_active');\n\n            _this._openSpoiler(content, 'spoiler__content_visible');\n          }\n        });\n      };\n\n      for (var i = 0; i < this.spoilerWrappers.length; i++) {\n        _loop(i);\n      }\n    }\n  }]);\n\n  return Spoiler;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/components/Footer.js\nfunction Footer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Footer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Footer_createClass(Constructor, protoProps, staticProps) { if (protoProps) Footer_defineProperties(Constructor.prototype, protoProps); if (staticProps) Footer_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Footer = /*#__PURE__*/function () {\n  function Footer(footer, text) {\n    Footer_classCallCheck(this, Footer);\n\n    this.footer = footer;\n    this.text = text;\n  }\n\n  Footer_createClass(Footer, [{\n    key: \"setContent\",\n    value: function setContent() {\n      this.footer.textContent = \"1992-\".concat(this._getСurrentYear(), \" \").concat(this.text);\n    }\n  }, {\n    key: \"_get\\u0421urrentYear\",\n    value: function _getСurrentYear() {\n      var year = new Date().getFullYear();\n\n      if (year >= 2021) {\n        return year;\n      } else return 2021;\n    }\n  }]);\n\n  return Footer;\n}();\n\n\n// CONCATENATED MODULE: ./src/js/index.js\n\n\n\n\n\n\n\nvar header = new Header(menuIconWrapper, menuIcon, navigation, page, root);\nvar selections = new Selections(selection, tempId);\nvar spoiler = new Spoiler(spoilersWrappers);\nvar map = new Map(ymap, 'contacts__map_cover');\nvar js_footer = new Footer(footer, footerText);\nheader.setEventListener();\nselections.rewritingDefaultArchorId();\nselections.openSelectedBlocks();\nselections.setEventListener();\nspoiler.setEventListener();\nmap.setEventListener();\njs_footer.setContent();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")}]);